# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

pool:
  vmImage: 'VS2017-Win2016'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@0

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
  displayName: 'Build'

- script: |
    sqllocaldb create MSSQLLocalDB
    sqllocaldb start MSSQLLocalDB
    sqllocaldb info MSSQLLocalDB
  displayName: 'Enabling MSSQLLocalDB'

- task: VSTest@2
  inputs:
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
  displayName: '.NET Framework tests'

- task: DotNetCoreCLI@2
  inputs:
    command: test
    projects: '**/*Tests/*.csproj'
    arguments: '--configuration $(buildConfiguration) --collect "Code coverage"'

- script: echo System.DefaultWorkingDirectory $(System.DefaultWorkingDirectory)

- powershell: |
    Write-Host "Hello World from $Env:AGENT_NAME."
    Write-Host "My ID is $Env:AGENT_ID."
    Write-Host "AGENT_WORKFOLDER contents:"
    gci $Env:AGENT_WORKFOLDER
    Write-Host "AGENT_BUILDDIRECTORY contents:"
    gci $Env:AGENT_BUILDDIRECTORY
    Write-Host "BUILD_SOURCESDIRECTORY contents:"
    gci $Env:BUILD_SOURCESDIRECTORY
    Write-Host "Over and out."